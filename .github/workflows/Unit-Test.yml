---
name: Run Unit Tests on PR
on: workflow_call
jobs:
  container_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: Get all changed package files
        id: changed-ruby-files
        uses: tj-actions/changed-files@v44.5.7
        with:
          files: |
             packages/*.rb
      - name: List all changed package files
        uses: tj-actions/changed-files@v44.5.7
        if: steps.changed-ruby-files.outputs.any_changed == 'true'
      - name: Unit Tests (x86_64)
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-ruby-files.outputs.all_changed_files }}
        run: |
            export PR_NUMBER="${{ github.event.pull_request.number || github.event.issue.number }}" && \
            echo "ALL_CHANGED FILES: ${ALL_CHANGED_FILES}." && \
            export CHANGED_PACKAGES="$(echo ${ALL_CHANGED_FILES} | sed -e 's,packages/,,g' -e 's,\.rb,,g' | sort)" && \
            echo "CHANGED PACKAGES: ${CHANGED_PACKAGES}." && \
            export GLIBC_227_COMPATIBLE_PACKAGES="$(for i in ${CHANGED_PACKAGES} ; do if ! grep -q min_glibc packages/$i.rb; then echo $i ; else grep min_glibc packages/$i.rb | tr -d \' | awk '{exit $2 <= 2.27}' || echo $i ; fi ; done | xargs)" && \
            echo "PR #${PR_NUMBER} has these possibly Glibc 2.27 compatible packages: ${GLIBC_227_COMPATIBLE_PACKAGES}" && \
            export GLIBC_237_COMPATIBLE_PACKAGES="$(for i in ${CHANGED_PACKAGES} ; do grep min_glibc packages/$i.rb | tr -d \' | awk '{exit $2 <= 2.37}' || echo $i ; done | xargs)" && \
            echo "PR #${PR_NUMBER} has these possibly Glibc 2.37 compatible packages: ${GLIBC_237_COMPATIBLE_PACKAGES}" && \
            export X86_64_PACKAGES="$(for p in ${CHANGED_PACKAGES}; do grep -q "compatibility.*all\|x86_64" packages/${p}.rb && echo ${p}; done | xargs)" && \
            echo "PR #${PR_NUMBER} has these x86_64 compatible packages: ${X86_64_PACKAGES}" && \
            export ARMV7L_PACKAGES="$(for p in ${CHANGED_PACKAGES}; do grep -q "compatibility.*all\|armv7l" packages/${p}.rb && echo ${p}; done | xargs)" && \
            echo "PR #${PR_NUMBER} has these ARMv7L compatible packages: ${ARMV7L_PACKAGES}" && \
            if [[ $GLIBC_237_COMPATIBLE_PACKAGES ]] ; then x86_64_CONTAINER="satmandu/crewbuild:hatch-x86_64.m126"; else x86_64_CONTAINER="satmandu/crewbuild:nocturne-x86_64.m90"; fi &&\
            export container_cmdline="/usr/bin/sudo -u chronos LD_LIBRARY_PATH=/usr/local/lib64:/lib64 /usr/local/bin/bash -c \"export ALL_CHANGED_FILES='${ALL_CHANGED_FILES}' && \
            export CHANGED_PACKAGES='${CHANGED_PACKAGES}' && \
            echo 'ALL_CHANGED FILES: ${ALL_CHANGED_FILES}.' && \
            echo 'CHANGED PACKAGES: ${CHANGED_PACKAGES}.' && \
            echo 'CREW_REPO is ${{ github.event.pull_request.head.repo.clone_url }}' && \
            echo 'CREW_BRANCH is ${{ github.head_ref }}' && \
            CREW_REPO=${{ github.event.pull_request.head.repo.clone_url }} CREW_BRANCH=${{ github.head_ref }} crew update && \
            /usr/local/lib/crew/tests/unit_test.sh\"" && \
            echo $container_cmdline && \
            sudo docker run --rm \
            --platform linux/amd64 \
            -i ${x86_64_CONTAINER} \
            /bin/bash -c "$container_cmdline"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0
        # This is not the best way to do things, a matrix would certainly be better.
      - name: Unit Tests (armv7l)
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-ruby-files.outputs.all_changed_files }}
        run: |
            export PR_NUMBER="${{ github.event.pull_request.number || github.event.issue.number }}" && \
            echo "ALL_CHANGED FILES: ${ALL_CHANGED_FILES}." && \
            export CHANGED_PACKAGES="$(echo ${ALL_CHANGED_FILES} | sed -e 's,packages/,,g' -e 's,\.rb,,g' | sort)" && \
            echo "CHANGED PACKAGES: ${CHANGED_PACKAGES}." && \
            export GLIBC_227_COMPATIBLE_PACKAGES="$(for i in ${CHANGED_PACKAGES} ; do if ! grep -q min_glibc packages/$i.rb; then echo $i ; else grep min_glibc packages/$i.rb | tr -d \' | awk '{exit $2 <= 2.27}' || echo $i ; fi ; done | xargs)" && \
            echo "PR #${PR_NUMBER} has these possibly Glibc 2.27 compatible packages: ${GLIBC_227_COMPATIBLE_PACKAGES}" && \
            export GLIBC_237_COMPATIBLE_PACKAGES="$(for i in ${CHANGED_PACKAGES} ; do grep min_glibc packages/$i.rb | tr -d \' | awk '{exit $2 <= 2.37}' || echo $i ; done | xargs)" && \
            echo "PR #${PR_NUMBER} has these possibly Glibc 2.37 compatible packages: ${GLIBC_237_COMPATIBLE_PACKAGES}" && \
            export X86_64_PACKAGES="$(for p in ${CHANGED_PACKAGES}; do grep -q "compatibility.*all\|x86_64" packages/${p}.rb && echo ${p}; done | xargs)" && \
            echo "PR #${PR_NUMBER} has these x86_64 compatible packages: ${X86_64_PACKAGES}" && \
            export ARMV7L_PACKAGES="$(for p in ${CHANGED_PACKAGES}; do grep -q "compatibility.*all\|armv7l" packages/${p}.rb && echo ${p}; done | xargs)" && \
            echo "PR #${PR_NUMBER} has these ARMv7L compatible packages: ${ARMV7L_PACKAGES}" && \
            [[ $ARMV7L_PACKAGES ]] || exit 0 && \
            if [[ $GLIBC_237_COMPATIBLE_PACKAGES ]] ; then armv7l_CONTAINER="satmandu/crewbuild:strongbad-armv7l.m126"; else armv7l_CONTAINER="satmandu/crewbuild:fievel-armv7l.m91"; fi &&\
            export container_cmdline="/usr/bin/sudo -u chronos LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:/lib /usr/local/bin/bash -c \"export ALL_CHANGED_FILES='${ALL_CHANGED_FILES}' && \
            export CHANGED_PACKAGES='${CHANGED_PACKAGES}' && \
            echo 'ALL_CHANGED FILES: ${ALL_CHANGED_FILES}.' && \
            echo 'CHANGED PACKAGES: ${CHANGED_PACKAGES}.' && \
            echo 'CREW_REPO is ${{ github.event.pull_request.head.repo.clone_url }}' && \
            echo 'CREW_BRANCH is ${{ github.head_ref }}' && \
            CREW_REPO=${{ github.event.pull_request.head.repo.clone_url }} CREW_BRANCH=${{ github.head_ref }} crew update && \
            /usr/local/lib/crew/tests/unit_test.sh\"" && \
            echo $container_cmdline && \
            sudo docker run --rm \
            --platform linux/arm/v7 \
            -i ${armv7l_CONTAINER} \
            /bin/bash -c "$container_cmdline"
