---
name: Run Unit Tests on PR
on: workflow_call
jobs:
  container_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: Get all changed package files
        id: changed-ruby-files
        uses: tj-actions/changed-files@v44.5.7
        with:
          files: |
             packages/*.rb
      - name: List all changed package files
        uses: tj-actions/changed-files@v44.5.7
        if: steps.changed-ruby-files.outputs.any_changed == 'true'
      - name: Unit Tests (x86_64)
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-ruby-files.outputs.all_changed_files }}
        run: |
            export PR_NUMBER="${{ github.event.pull_request.number || github.event.issue.number }}" && \
            echo "ALL_CHANGED FILES is/are ${ALL_CHANGED_FILES}." && \
            export CHANGED_PACKAGES="$(echo ${ALL_CHANGED_FILES} | sed -e 's,packages/,,g' -e 's,\.rb,,g' | sort)" && \
            echo "CHANGED PACKAGES is/are ${CHANGED_PACKAGES}." && \
            export X86_64_PACKAGES="$(for p in ${CHANGED_PACKAGES}; do grep -q "compatibility.*all\|x86_64" packages/$p.rb && echo $p; done | xargs)" && \
            echo "PR #${PR_NUMBER} has these x86_64 compatible packages: ${X86_64_PACKAGES}" && \
            export ARMV7L_PACKAGES="$(for p in ${CHANGED_PACKAGES}; do grep -q "compatibility.*all\|armv7l" packages/$p.rb && echo $p; done | xargs)" && \
            echo "PR #${PR_NUMBER} has these ARMv7L compatible packages: ${ARMV7L_PACKAGES}" && \
            sudo docker run --rm \
            --platform linux/amd64 -i satmandu/crewbuild:nocturne-x86_64.m90 \
            sudo -i -u chronos /bin/bash -c " \
            export ALL_CHANGED_FILES=\"${ALL_CHANGED_FILES}\" && \
            export CHANGED_PACKAGES=\"${CHANGED_PACKAGES}\" && \
            echo \"CREW_REPO is ${{ github.event.pull_request.head.repo.clone_url }}\" && \
            echo \"CREW_BRANCH is ${{ github.head_ref }}\" && \
            CREW_REPO=${{ github.event.pull_request.head.repo.clone_url }} CREW_BRANCH=${{ github.head_ref }} crew update && \
            /usr/local/lib/crew/tests/unit_test.sh"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        # This is not the best way to do things, a matrix would certainly be better.
      - name: Unit Tests (armv7l)
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-ruby-files.outputs.all_changed_files }}
        run: |
            export PR_NUMBER="${{ github.event.pull_request.number || github.event.issue.number }}" && \
            echo "ALL_CHANGED FILES is/are ${ALL_CHANGED_FILES}." && \
            export CHANGED_PACKAGES="$(echo ${ALL_CHANGED_FILES} | sed -e 's,packages/,,g' -e 's,\.rb,,g' | sort)" && \
            echo "CHANGED PACKAGES is/are ${CHANGED_PACKAGES}." && \
            export X86_64_PACKAGES="$(for p in ${CHANGED_PACKAGES}; do grep -q "compatibility.*all\|x86_64" packages/$p.rb && echo $p; done | xargs)" && \
            echo "PR #${PR_NUMBER} has these x86_64 compatible packages: ${X86_64_PACKAGES}" && \
            export ARMV7L_PACKAGES="$(for p in ${CHANGED_PACKAGES}; do grep -q "compatibility.*all\|armv7l" packages/$p.rb && echo $p; done | xargs)" && \
            echo "PR #${PR_NUMBER} has these ARMv7L compatible packages: ${ARMV7L_PACKAGES}" && \
            [[ $ARMV7L_PACKAGES ]] || exit 0 && \
            sudo docker run --rm \
            --platform linux/arm/v7 -t satmandu/crewbuild:fievel-armv7l.m91 \
            sudo -i -u chronos /bin/bash -x -c " \
            export ALL_CHANGED_FILES=\"${ALL_CHANGED_FILES}\" && \
            export CHANGED_PACKAGES=\"${CHANGED_PACKAGES}\" && \
            echo \"CREW_REPO is ${{ github.event.pull_request.head.repo.clone_url }}\" && \
            echo \"CREW_BRANCH is ${{ github.head_ref }}\" && \
            CREW_REPO=${{ github.event.pull_request.head.repo.clone_url }} CREW_BRANCH=${{ github.head_ref }} crew update && \
            /usr/local/lib/crew/tests/unit_test.sh"
